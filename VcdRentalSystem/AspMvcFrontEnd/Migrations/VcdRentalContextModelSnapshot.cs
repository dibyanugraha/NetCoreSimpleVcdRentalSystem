// <auto-generated />
using System;
using AspMvcFrontEnd.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspMvcFrontEnd.Migrations
{
    [DbContext(typeof(VcdRentalContext))]
    partial class VcdRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspMvcFrontEnd.Models.ContactModel", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("FullName");

                    b.Property<string>("IdentityNumber");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("TenantModelTenantId");

                    b.HasKey("ContactId");

                    b.HasIndex("TenantModelTenantId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.RentalLedgerEntryModel", b =>
                {
                    b.Property<int>("EntryNo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DueDate");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("RentDate");

                    b.Property<int>("RentalOrderId");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<int>("TenantId");

                    b.Property<int>("VcdId");

                    b.HasKey("EntryNo");

                    b.ToTable("RentalLedgerEntries");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.RentalOrderModel", b =>
                {
                    b.Property<int>("RentalOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillToTenantTenantId");

                    b.Property<DateTime>("DueDate");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderNo");

                    b.Property<decimal>("TotalCost");

                    b.HasKey("RentalOrderId");

                    b.HasIndex("BillToTenantTenantId");

                    b.ToTable("RentalOrders");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.RentalPackageModel", b =>
                {
                    b.Property<int>("RentalPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CostPerMonth");

                    b.Property<int>("MaxVcdRental");

                    b.Property<string>("PackageName");

                    b.HasKey("RentalPackageId");

                    b.ToTable("RentalPackageModel");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.TenantModel", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("FullName");

                    b.Property<string>("IdentityNumber");

                    b.Property<bool>("IsMemberOfAnotherRental");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("Reference");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<int?>("SubscribePackageRentalPackageId");

                    b.HasKey("TenantId");

                    b.HasIndex("SubscribePackageRentalPackageId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.VcdModel", b =>
                {
                    b.Property<int>("VcdId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RentalOrderModelRentalOrderId");

                    b.Property<DateTime?>("VcdBoughtDate");

                    b.Property<string>("VcdName");

                    b.HasKey("VcdId");

                    b.HasIndex("RentalOrderModelRentalOrderId");

                    b.ToTable("Vcds");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.ContactModel", b =>
                {
                    b.HasOne("AspMvcFrontEnd.Models.TenantModel")
                        .WithMany("ApprovedContacts")
                        .HasForeignKey("TenantModelTenantId");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.RentalOrderModel", b =>
                {
                    b.HasOne("AspMvcFrontEnd.Models.TenantModel", "BillToTenant")
                        .WithMany()
                        .HasForeignKey("BillToTenantTenantId");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.TenantModel", b =>
                {
                    b.HasOne("AspMvcFrontEnd.Models.RentalPackageModel", "SubscribePackage")
                        .WithMany()
                        .HasForeignKey("SubscribePackageRentalPackageId");
                });

            modelBuilder.Entity("AspMvcFrontEnd.Models.VcdModel", b =>
                {
                    b.HasOne("AspMvcFrontEnd.Models.RentalOrderModel")
                        .WithMany("Vcds")
                        .HasForeignKey("RentalOrderModelRentalOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
